#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&vtrackball>;
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
                        bindings = <
        &trans  &kp Q       &kp W       &kp E          &kp R            &kp T           &kp Y           &kp U            &kp I        &kp O       &kp P          &trans
        &trans  &mt RGUI A  &mt LALT S  &mt LSHFT D    &mt LCTRL F      &mt RALT G      &mt RALT H      &mt RCTRL J      &mt RSHFT K  &mt RALT L  &mt RGUI SEMI  &trans
        &trans  &kp Z       &kp X       &kp C          &kp V            &kp B           &kp N           &kp M            &kp COMMA    &kp DOT     &kp FSLH       &trans
                                        &lt 4 ESC  &lt 1 SPACE  &kp TAB         &kp BSPC        &lt 2 ENTER
            >;
        };

        Lower {
                        bindings = <
        &trans  &kp BSPC  &kp N7  &kp N8   &kp N9           &kp MINUS      &trans      &trans           &trans    &trans  &trans          &trans
        &trans  &kp N0    &kp N4  &kp N5   &kp N6           &kp KP_PLUS    &kp TILDE2  &kp LEFT_DESK    &kp LEFT_TAB    &kp RIGTH_TAB  &kp RIGHT_DESK  &trans
        &trans  &kp DOT   &kp N1  &kp N2   &kp N3           &kp ENTER      &kp GRAVE   &kp TASK_MAN     &trans    &trans  &trans          &trans
                                &kp DEL  &trans  &trans        &trans    &trans
            >;
        };

        Raise {
                        bindings = <
        &trans  &kp EXCL     &kp LBRC       &kp RBRC        &kp DLLR            &kp PRCNT    &kp CARET  &kp AMPS         &kp KP_MULTIPLY  &kp PIPE  &kp BSLH   &trans
        &trans  &mt LGUI AT  &mt LALT LPAR  &mt LSHFT RPAR  &mt LCTRL KP_MINUS  &kp PLUS     &kp DQT    &kp LEFT         &kp UP           &kp DOWN  &kp RIGHT  &trans
        &trans  &kp HASH     &kp LBKT       &kp RBKT        &kp EQUAL           &kp UNDER    &kp APOS   &kp HOME         &kp N0           &kp DEL   &kp END    &trans
                                            &trans   &trans     &trans      &trans  &trans
            >;
        };

        Pointer {
                        bindings = <
        &trans  &trans  &trans        &trans         &trans           &trans        &trans    &kp F7           &kp F8    &kp F9  &kp F12  &trans
        &trans  &trans  &bt BT_SEL 3  &bt BT_SEL 4   &trans           &trans        &trans    &kp F4           &kp F5    &kp F6  &kp F11  &trans
        &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2     &bt BT_CLR    &trans    &kp F1           &kp F2    &kp F3  &kp F10  &trans
                                    &trans  &trans  &trans       &trans  &trans 
            >;
        };

        Media {
                        bindings = <
        &trans  &kp C_VOL_DN  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_VOL_UP    &trans    &trans           &trans    &trans  &trans  &trans
        &trans  &trans        &trans      &trans            &trans           &trans          &trans    &trans           &trans    &trans  &trans  &trans
        &trans  &trans        &trans      &trans            &trans           &trans          &trans    &trans           &trans    &trans  &trans  &trans
                                        &trans     &trans  &trans         &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
